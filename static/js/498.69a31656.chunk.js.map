{"version":3,"file":"static/js/498.69a31656.chunk.js","mappings":"6TAGMA,EAAW,+BACXC,EAAU,mCAGRC,EAAO,mCAAG,WAAMC,GAAN,gGAEWC,EAAAA,EAAAA,IAAUD,GAFrB,cAENE,EAFM,yBAGLA,GAHK,gCAKZC,EAAAA,GAAAA,MAAY,gDALA,yDAAH,sDASAC,EAAa,SAAAC,GACxB,IAAML,EAAG,UAAMH,EAAN,kBAAwBQ,EAAxB,4BAAmDP,EAAnD,0BACT,OAAOC,EAAQC,EAChB,EAEYM,EAAkB,SAAAD,GAC7B,IAAML,EAAG,UAAMH,EAAN,kBAAwBQ,EAAxB,oBAA2CP,EAA3C,0BACT,OAAOC,EAAQC,EAChB,EAEYO,EAAc,WACzB,IAAMP,EAAG,UAAMH,EAAN,qCAA2CC,GACpD,OAAOC,EAAQC,EAChB,EAEYQ,EAAY,SAAAC,GACvB,IAAMT,EAAG,UAAMH,EAAN,iCAAuCC,EAAvC,kBAAwDW,EAAxD,8CACT,OAAOV,EAAQC,EAChB,EAEYU,EAAU,SAAAL,GACrB,IAAML,EAAG,UAAMH,EAAN,kBAAwBQ,EAAxB,4BAAmDP,EAAnD,mBACT,OAAOC,EAAQC,EAChB,C,oLCrCUW,EAAiBC,EAAAA,EAAAA,GAAH,iWAChB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,GAAxB,IAEH,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IACC,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAIH,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAObC,EAAWJ,EAAAA,EAAAA,EAAH,yIAGN,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAET,SAAAF,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,SAAvB,IAGHC,EAAcP,EAAAA,EAAAA,IAAH,+DACb,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,GAAxB,IAIHK,EAAaR,EAAAA,EAAAA,GAAH,gI,SC3BVS,EAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtC,OACE,UAACb,EAAD,WACGW,GACC,SAACH,EAAD,CACEM,IAAG,6CAAwCH,GAC3CI,IAAKH,EACLI,MAAM,SAGR,SAAC,MAAD,CAAqBC,KAAK,WAE5B,SAACZ,EAAD,UAAWO,KACX,SAACP,EAAD,UAAWQ,MAGhB,E,UCgCDH,EAASQ,UAAY,CACnBP,MAAOQ,IAAAA,OACPP,KAAMO,IAAAA,OACNN,UAAWM,IAAAA,QAGb,MAjDa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACQ9B,GAAY+B,EAAAA,EAAAA,MAAZ/B,QAeR,OAbAgC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAYjC,GAASkC,MAAK,SAAArC,GACpBA,IACF+B,EAAQ/B,EAASsC,KAAKR,MACY,IAA9B9B,EAASsC,KAAKR,KAAKS,QACrBN,GAAU,GAKf,GACF,GAAE,CAAC9B,KAGF,gCACG2B,GACC,SAACZ,EAAD,UACGY,EAAKU,KAAI,SAAAC,GAAK,OACb,SAACtB,EAAD,CAEEC,MAAOqB,EAAMC,aACbrB,KAAMoB,EAAMpB,KACZC,UAAWmB,EAAMnB,WAHZmB,EAAME,GAFA,OAUjB,SAAC,IAAD,IAEDX,IACC,SAAClB,EAAD,yEAMP,C,mCCxCD,IAAI8B,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKxC,EAAOyC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIpC,KAAO,sBACLoC,CAPL,CAQF,CAED,SAASE,IACP,OAAOR,CACR,CAHDA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASZ,EACTa,QAASrB,EACTsB,YAAatB,EACbuB,WAAYf,EACZgB,KAAMxB,EACNyB,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAejC,UAAYiC,EAEpBA,CACR,C,uBC/CCZ,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["api/api.js","components/Cast/CastStyled.jsx","components/Cast/CastItem.jsx","components/Cast/Cast.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f85e8fb1a6cfbaec434c3044880fa56';\n\n\n  const getData = async url => {\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      toast.error('Sorry, We don`t have this film`s information');\n    }\n  };\n\n  export const getReviews = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    return getData(url);\n  };\n\n  export const getMovieDetails = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`;\n    return getData(url);\n  };\n\n  export const getTranding = () => {\n    const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n    return getData(url);\n  };\n\n  export const getMovies = query => {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n    return getData(url);\n  };\n\n  export const getCast = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    return getData(url);\n  };","import styled from '@emotion/styled';\n\nexport const CastStyledItem = styled.li`\n  width: ${props => props.theme.spacing(64)};\n  list-style: none;\n  padding: ${props => props.theme.spacing(2)};\n  border-radius: ${props => props.theme.spacing(1)};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.spacing(2)};\n  }\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CastText = styled.p`\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(3)};\n  line-height: 1.2;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const ActorsPhoto = styled.img`\n  width: ${props => props.theme.spacing(32)};\n  margin-bottom: 15px;\n`;\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n`;\n","import { HiOutlineEmojiHappy } from 'react-icons/hi';\nimport { CastStyledItem, CastText, ActorsPhoto } from './CastStyled';\n\nexport const CastItem = ({ photo, name, character }) => {\n  return (\n    <CastStyledItem>\n      {photo ? (\n        <ActorsPhoto\n          src={`https://image.tmdb.org/t/p/original${photo}`}\n          alt={name}\n          width=\"128\"\n        />\n      ) : (\n        <HiOutlineEmojiHappy size=\"128px\" />\n      )}\n      <CastText>{name}</CastText>\n      <CastText>{character}</CastText>\n    </CastStyledItem>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as API from '../../api/api';\nimport { CastItem } from './CastItem';\nimport { CastText, ActorsList } from './CastStyled';\nimport { Spinner } from '../App/AppStyled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [noData, setNoData] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    API.getCast(movieId).then(response => {\n      if (response) {\n        setCast(response.data.cast);\n        if (response.data.cast.length === 0) {\n          setNoData(true);\n        }\n      } else {\n        return;\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast ? (\n        <ActorsList>\n          {cast.map(actor => (\n            <CastItem\n              key={actor.id}\n              photo={actor.profile_path}\n              name={actor.name}\n              character={actor.character}\n            />\n          ))}\n        </ActorsList>\n      ) : (\n        <Spinner />\n      )}\n      {noData && (\n        <CastText>\n          Sorry, we don't have any cast information for this movie\n        </CastText>\n      )}\n    </>\n  );\n};\n\nCastItem.propTypes = {\n  photo: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n\nexport default Cast;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["BASE_URL","API_KEY","getData","url","axios","response","toast","getReviews","movieId","getMovieDetails","getTranding","getMovies","query","getCast","CastStyledItem","styled","props","theme","spacing","CastText","colors","textColor","ActorsPhoto","ActorsList","CastItem","photo","name","character","src","alt","width","size","propTypes","PropTypes","useState","cast","setCast","noData","setNoData","useParams","useEffect","API","then","data","length","map","actor","profile_path","id","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}