{"version":3,"file":"static/js/53.6368e988.chunk.js","mappings":"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","sources":["components/MovieDetailsPage/MovieDetailsPageStyled.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","Pages/MovieDataPage.jsx","api/api.js","components/GoBackButton/GoBackButton.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviePageText = styled.p`\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(3)};\n  line-height: 1.2;\n  color: ${props => props.theme.colors.textColor};\n  margin-bottom: ${props => props.theme.spacing(2)};\n`;\n\nexport const MoviePageTitle = styled.h3`\n  font-family: Raleway, sans-serif;\n  font-weight: 700;\n  font-size: ${props => props.theme.spacing(4)};\n  line-height: 1.2;\n  color: ${props => props.theme.colors.titleColor};\n  margin-bottom: ${props => props.theme.spacing(1)};\n`;\n\nexport const Poster = styled.img`\n  width: ${props => props.theme.spacing(64)};\n`;\n\nexport const GenresItem = styled.span`\n  :not(:last-child) {\n    padding-right: ${props => props.theme.spacing(2)};\n  }\n`;\n\nexport const MoviePageContent = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing(3)};\n`;\n\nexport const MoviePageDescription = styled.div`\n  padding: ${props => props.theme.spacing(4)};\n`;\n\nexport const DetailsLink = styled(NavLink)`\n  display: block;\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(4)};\n  line-height: 1.2;\n  text-decoration: none;\n  color: ${props => props.theme.colors.textColor};\n  :hover,\n  :focus {\n    color: ${props => props.theme.colors.focusColor};\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport * as API from '../../api/api';\nimport {\n  MoviePageText,\n  Poster,\n  MoviePageTitle,\n  GenresItem,\n  MoviePageContent,\n  MoviePageDescription,\n  DetailsLink,\n} from './MovieDetailsPageStyled';\nimport { Spinner } from '../App/AppStyled';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport GoBackButton from '../GoBackButton/GoBackButton';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(response => {\n      if (response) {\n        setMovieInfo(response.data);\n      } else {\n        setTimeout(() => {\n          navigate('/');\n        }, 3000);\n        return;\n      }\n    });\n  }, [location, movieId, navigate]);\n\n  return (\n    <>\n      {movieInfo ? (\n        <>\n          <GoBackButton onClick={goBack} />\n          <MoviePageContent>\n            <Poster\n              src={`https://image.tmdb.org/t/p/original${movieInfo.poster_path}`}\n              alt={movieInfo.title}\n            />\n            <MoviePageDescription>\n              <h2>\n                {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n              </h2>\n              <MoviePageText>User score {movieInfo.vote_average}</MoviePageText>\n              <MoviePageTitle>Overview</MoviePageTitle>\n              <MoviePageText>{movieInfo.overview}</MoviePageText>\n              <MoviePageTitle>Genres</MoviePageTitle>\n              <MoviePageText>\n                {movieInfo.genres.map(film => (\n                  <GenresItem key={film.id}>{film.name}</GenresItem>\n                ))}\n              </MoviePageText>\n            </MoviePageDescription>\n          </MoviePageContent>\n          <MoviePageText>Additional information</MoviePageText>\n          <ul>\n            <DetailsLink to={`/movies/${movieId}/cast`}>Cast</DetailsLink>\n            <DetailsLink to={`/movies/${movieId}/reviews`}>Reviews</DetailsLink>\n          </ul>\n        </>\n      ) : (\n        <Spinner />\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import MovieDetailsPage from '../components/MovieDetailsPage';\n\nconst MovieDataPage = () => {\n  return (\n    <div>\n      <MovieDetailsPage />\n    </div>\n  );\n};\n\nexport default MovieDataPage;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f85e8fb1a6cfbaec434c3044880fa56';\n\n\n  const getData = async url => {\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      toast.error('Sorry, We don`t have this film`s information');\n    }\n  };\n\n  export const getReviews = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    return getData(url);\n  };\n\n  export const getMovieDetails = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`;\n    return getData(url);\n  };\n\n  export const getTranding = () => {\n    const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n    return getData(url);\n  };\n\n  export const getMovies = query => {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n    return getData(url);\n  };\n\n  export const getCast = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    return getData(url);\n  };","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst GoBackButton = ({ onClick }) => {\n  return (\n    <CustomButton type=\"click\" onClick={onClick}>\n      Go back\n    </CustomButton>\n  );\n};\n\nexport default GoBackButton;\n\nexport const CustomButton = styled.button`\n  display: block;\n  margin-bottom: ${props => props.theme.spacing(1)};\n  padding: ${props => props.theme.spacing(2)} ${props => props.theme.spacing(4)};\n  border: none;\n  outline: none;\n  border-radius: ${props => props.theme.spacing(1)};\n  cursor: pointer;\n  font-size: ${props => props.theme.spacing(3)};\n  font-weight: 700;\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n`;\n"],"names":["MoviePageText","styled","props","theme","spacing","colors","textColor","MoviePageTitle","titleColor","Poster","GenresItem","MoviePageContent","MoviePageDescription","DetailsLink","NavLink","focusColor","movieId","useParams","useState","movieInfo","setMovieInfo","navigate","useNavigate","location","useLocation","useEffect","API","then","response","data","setTimeout","GoBackButton","onClick","state","from","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","film","name","id","to","BASE_URL","API_KEY","getData","url","axios","toast","getReviews","getMovieDetails","getTranding","getMovies","query","getCast","CustomButton","type","blue","white"],"sourceRoot":""}