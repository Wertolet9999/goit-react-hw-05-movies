{"version":3,"file":"static/js/732.acf9b9a7.chunk.js","mappings":"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","sources":["components/MoviesPage/MoviesPageStyled.jsx","Pages/MoviesPage.jsx","api/api.js","components/GoBackButton/GoBackButton.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport { CustomButton } from '../GoBackButton/GoBackButton';\n\nexport const SearchFormButton = styled(CustomButton)`\n  display: inline;\n  margin-left: ${props => props.theme.spacing(1)};\n`;\n\nexport const SearchFormInput = styled(Field)`\n  width: 50%;\n  font-size: ${props => props.theme.spacing(5)};\n  outline: none;\n  padding-left: ${props => props.theme.spacing(1)};\n  padding-right: ${props => props.theme.spacing(1)};\n  ::placeholder {\n    font-size: ${props => props.theme.spacing(3.5)};\n  }\n`;\n\nexport const FilmList = styled.li`\n  list-style: none;\n  :not(:last-child) {\n    ${props => props.theme.spacing(1)};\n  }\n`;\n\nexport const FilmLink = styled(NavLink)`\n  font-family: Raleway, sans-serif;\n  font-weight: 500;\n  font-size: ${props => props.theme.spacing(3.5)};\n  line-height: 1.2;\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: ${props => props.theme.colors.focusColor};\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as API from '../api/api';\nimport { Spinner } from '../components/App/AppStyled';\nimport {\n  SearchFormButton,\n  SearchFormInput,\n  FilmList,\n  FilmLink,\n} from '../components/MoviesPage/MoviesPageStyled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  let [queryWord] = useSearchParams();\n  let keyWord = queryWord.get('query');\n\n  const initialValues = { query: '' };\n\n  const getData = key => {\n    setLoading(true);\n    API.getMovies(key).then(response => {\n      if (response) {\n        setMovies(response.data.results);\n        setLoading(false);\n      } else {\n        return;\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (keyWord) {\n      getData(keyWord);\n    }\n  }, [keyWord]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    getData(values.query);\n    navigate({\n      search: `?query=${values.query}`,\n    });\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <SearchFormInput\n            name=\"query\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n          />\n          <SearchFormButton type=\"submit\">Search</SearchFormButton>\n        </Form>\n      </Formik>\n      {loading && <Spinner />}\n      {movies && (\n        <ul>\n          {movies.map(film => (\n            <FilmList key={film.id}>\n              <FilmLink\n                to={`/movies/${film.id}`}\n                state={{ from: location, search: keyWord }}\n              >\n                {film.title} ({film.release_date.slice(0, 4)})\n              </FilmLink>\n            </FilmList>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f85e8fb1a6cfbaec434c3044880fa56';\n\n\n  const getData = async url => {\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      toast.error('Sorry, We don`t have this film`s information');\n    }\n  };\n\n  export const getReviews = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    return getData(url);\n  };\n\n  export const getMovieDetails = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1`;\n    return getData(url);\n  };\n\n  export const getTranding = () => {\n    const url = `${BASE_URL}/trending/all/day?api_key=${API_KEY}`;\n    return getData(url);\n  };\n\n  export const getMovies = query => {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n    return getData(url);\n  };\n\n  export const getCast = movieId => {\n    const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    return getData(url);\n  };","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst GoBackButton = ({ onClick }) => {\n  return (\n    <CustomButton type=\"click\" onClick={onClick}>\n      Go back\n    </CustomButton>\n  );\n};\n\nexport default GoBackButton;\n\nexport const CustomButton = styled.button`\n  display: block;\n  margin-bottom: ${props => props.theme.spacing(1)};\n  padding: ${props => props.theme.spacing(2)} ${props => props.theme.spacing(4)};\n  border: none;\n  outline: none;\n  border-radius: ${props => props.theme.spacing(1)};\n  cursor: pointer;\n  font-size: ${props => props.theme.spacing(3)};\n  font-weight: 700;\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n`;\n"],"names":["SearchFormButton","styled","CustomButton","props","theme","spacing","SearchFormInput","Field","FilmList","FilmLink","NavLink","colors","textColor","focusColor","useState","movies","setMovies","loading","setLoading","location","useLocation","navigate","useNavigate","useSearchParams","keyWord","get","getData","key","API","then","response","data","results","useEffect","initialValues","query","onSubmit","values","resetForm","search","name","type","autoComplete","autoFocus","placeholder","map","film","to","id","state","from","title","release_date","slice","BASE_URL","API_KEY","url","axios","toast","getReviews","movieId","getMovieDetails","getTranding","getMovies","getCast","onClick","blue","white"],"sourceRoot":""}